set(GAME_SOURCES
  amazons/amazons.cc
  amazons/amazons.h
  backgammon/backgammon.cc
  backgammon/backgammon.h
  bargaining/bargaining.cc
  bargaining/bargaining.h
  battleship/battleship.cc
  battleship/battleship.h
  battleship/battleship_types.h
  battleship/battleship_types.cc
  blackjack/blackjack.cc
  blackjack/blackjack.h
  blotto/blotto.cc
  blotto/blotto.h
  breakthrough/breakthrough.cc
  breakthrough/breakthrough.h
  bridge/bridge.cc
  bridge/bridge.h
  bridge/bridge_scoring.cc
  bridge/bridge_scoring.h
  bridge/bridge_uncontested_bidding.cc
  bridge/bridge_uncontested_bidding.h
  catch/catch.cc
  catch/catch.h
  checkers/checkers.cc
  checkers/checkers.h
  chess/chess.cc
  chess/chess.h
  chess/chess_board.cc
  chess/chess_board.h
  chess/chess_common.cc
  chess/chess_common.h
  cliff_walking/cliff_walking.cc
  cliff_walking/cliff_walking.h
  clobber/clobber.cc
  clobber/clobber.h
  coin_game/coin_game.cc
  coin_game/coin_game.h
  colored_trails/colored_trails.cc
  colored_trails/colored_trails.h
  colored_trails/colored_trails_utils.cc
  connect_four/connect_four.cc
  connect_four/connect_four.h
  coop_box_pushing/coop_box_pushing.cc
  coop_box_pushing/coop_box_pushing.h
  coordinated_mp/coordinated_mp.cc
  coordinated_mp/coordinated_mp.h
  crazy_eights/crazy_eights.cc
  crazy_eights/crazy_eights.h
  cursor_go/cursor_go.cc
  cursor_go/cursor_go.h
  dark_chess/dark_chess.cc
  dark_chess/dark_chess.h
  dark_hex/dark_hex.cc
  dark_hex/dark_hex.h
  deep_sea/deep_sea.cc
  deep_sea/deep_sea.h
  dots_and_boxes/dots_and_boxes.cc
  dots_and_boxes/dots_and_boxes.h
  dynamic_routing/dynamic_routing_data.cc
  dynamic_routing/dynamic_routing_data.h
  dynamic_routing/dynamic_routing_utils.cc
  dynamic_routing/dynamic_routing_utils.h
  dou_dizhu/dou_dizhu.cc
  dou_dizhu/dou_dizhu.h
  dou_dizhu/dou_dizhu_utils.cc
  dou_dizhu/dou_dizhu_utils.h
  efg_game/efg_game.cc
  efg_game/efg_game.h
  efg_game/efg_game_data.cc
  efg_game/efg_game_data.h
  euchre/euchre.cc
  euchre/euchre.h
  first_sealed_auction/first_sealed_auction.cc
  first_sealed_auction/first_sealed_auction.h
  gin_rummy/gin_rummy.cc
  gin_rummy/gin_rummy.h
  gin_rummy/gin_rummy_utils.cc
  gin_rummy/gin_rummy_utils.h
  go/go.cc
  go/go.h
  go/go_board.cc
  go/go_board.h
  goofspiel/goofspiel.cc
  goofspiel/goofspiel.h
  havannah/havannah.cc
  havannah/havannah.h
  hearts/hearts.cc
  hearts/hearts.h
  hex/hex.cc
  hex/hex.h
  kriegspiel/kriegspiel.cc
  kriegspiel/kriegspiel.h
  kuhn_poker/kuhn_poker.cc
  kuhn_poker/kuhn_poker.h
  laser_tag/laser_tag.cc
  laser_tag/laser_tag.h
  leduc_poker/leduc_poker.cc
  leduc_poker/leduc_poker.h
  lewis_signaling/lewis_signaling.cc
  lewis_signaling/lewis_signaling.h
  liars_dice/liars_dice.cc
  liars_dice/liars_dice.h
  maedn/maedn.cc
  maedn/maedn.h
  mancala/mancala.cc
  mancala/mancala.h
  markov_soccer/markov_soccer.cc
  markov_soccer/markov_soccer.h
  matching_pennies_3p/matching_pennies_3p.cc
  matching_pennies_3p/matching_pennies_3p.h
  matrix_games/matrix_games.cc
  mfg/crowd_modelling.cc
  mfg/crowd_modelling.h
  mfg/crowd_modelling_2d.cc
  mfg/crowd_modelling_2d.h
  mfg/dynamic_routing.cc
  mfg/dynamic_routing.h
  mfg/garnet.cc
  mfg/garnet.h
  morpion_solitaire/morpion_solitaire.cc
  morpion_solitaire/morpion_solitaire.h
  negotiation/negotiation.cc
  negotiation/negotiation.h
  nfg_game/nfg_game.cc
  nfg_game/nfg_game.h
  nine_mens_morris/nine_mens_morris.cc
  nine_mens_morris/nine_mens_morris.h
  nim/nim.cc
  nim/nim.h
  oh_hell/oh_hell.cc
  oh_hell/oh_hell.h
  oshi_zumo/oshi_zumo.cc
  oshi_zumo/oshi_zumo.h
  othello/othello.cc
  othello/othello.h
  oware/oware.cc
  oware/oware.h
  oware/oware_board.cc
  oware/oware_board.h
  pathfinding/pathfinding.cc
  pathfinding/pathfinding.h
  pentago/pentago.cc
  pentago/pentago.h
  phantom_go/phantom_go.h
  phantom_go/phantom_go.cc
  phantom_go/phantom_go_board.h
  phantom_go/phantom_go_board.cc
  phantom_ttt/phantom_ttt.cc
  phantom_ttt/phantom_ttt.h
  pig/pig.cc
  pig/pig.h
  quoridor/quoridor.cc
  quoridor/quoridor.h
  rbc/rbc.cc
  rbc/rbc.h
  sheriff/sheriff.cc
  sheriff/sheriff.h
  skat/skat.cc
  skat/skat.h
  solitaire/solitaire.cc
  solitaire/solitaire.h
  stones_and_gems/stones_and_gems.cc
  stones_and_gems/stones_and_gems.h
  tarok/tarok.cc
  tarok/tarok.h
  tarok/cards.cc
  tarok/cards.h
  tarok/contracts.cc
  tarok/contracts.h
  tic_tac_toe/tic_tac_toe.cc
  tic_tac_toe/tic_tac_toe.h
  tiny_bridge/tiny_bridge.cc
  tiny_bridge/tiny_bridge.h
  tiny_hanabi/tiny_hanabi.cc
  tiny_hanabi/tiny_hanabi.h
  trade_comm/trade_comm.cc
  trade_comm/trade_comm.h
  twenty_forty_eight/2048.cc
  twenty_forty_eight/2048.h
  twixt/twixt.cc
  twixt/twixt.h
  twixt/twixtboard.cc
  twixt/twixtboard.h
  twixt/twixtcell.h
  ultimate_tic_tac_toe/ultimate_tic_tac_toe.h
  ultimate_tic_tac_toe/ultimate_tic_tac_toe.cc
  y/y.cc
  y/y.h
)

if (${OPEN_SPIEL_BUILD_WITH_HANABI})
  set(GAME_SOURCES ${GAME_SOURCES} hanabi/hanabi.cc hanabi/hanabi.h)
endif()
if (${OPEN_SPIEL_BUILD_WITH_ACPC})
  set(GAME_SOURCES ${GAME_SOURCES} universal_poker/universal_poker.cc universal_poker/universal_poker.h)
endif()

add_library (games OBJECT ${GAME_SOURCES})

target_include_directories (games PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})

if (${OPEN_SPIEL_BUILD_WITH_HANABI})
  add_subdirectory(hanabi)
endif()
if (${OPEN_SPIEL_BUILD_WITH_ACPC})
  add_subdirectory(universal_poker)
endif()
if (${OPEN_SPIEL_BUILD_WITH_GAMUT})
  add_subdirectory(gamut)
endif()


# Uncomment to build the Ludii demo
# add_subdirectory (ludii)

add_library(bridge_double_dummy_solver OBJECT
  bridge/double_dummy_solver/include/dll.h
  bridge/double_dummy_solver/include/portab.h
  bridge/double_dummy_solver/src/ABsearch.cpp
  bridge/double_dummy_solver/src/ABsearch.h
  bridge/double_dummy_solver/src/ABstats.cpp
  bridge/double_dummy_solver/src/ABstats.h
  bridge/double_dummy_solver/src/CalcTables.cpp
  bridge/double_dummy_solver/src/CalcTables.h
  bridge/double_dummy_solver/src/dds.cpp
  bridge/double_dummy_solver/src/dds.h
  bridge/double_dummy_solver/src/DealerPar.cpp
  bridge/double_dummy_solver/src/debug.h
  bridge/double_dummy_solver/src/dump.cpp
  bridge/double_dummy_solver/src/dump.h
  bridge/double_dummy_solver/src/File.cpp
  bridge/double_dummy_solver/src/File.h
  bridge/double_dummy_solver/src/Init.cpp
  bridge/double_dummy_solver/src/Init.h
  bridge/double_dummy_solver/src/LaterTricks.cpp
  bridge/double_dummy_solver/src/LaterTricks.h
  bridge/double_dummy_solver/src/Memory.cpp
  bridge/double_dummy_solver/src/Memory.h
  bridge/double_dummy_solver/src/Moves.cpp
  bridge/double_dummy_solver/src/Moves.h
  bridge/double_dummy_solver/src/Par.cpp
  bridge/double_dummy_solver/src/parallel.h
  bridge/double_dummy_solver/src/PBN.cpp
  bridge/double_dummy_solver/src/PBN.h
  bridge/double_dummy_solver/src/PlayAnalyser.cpp
  bridge/double_dummy_solver/src/PlayAnalyser.h
  bridge/double_dummy_solver/src/QuickTricks.cpp
  bridge/double_dummy_solver/src/QuickTricks.h
  bridge/double_dummy_solver/src/Scheduler.cpp
  bridge/double_dummy_solver/src/Scheduler.h
  bridge/double_dummy_solver/src/SolveBoard.cpp
  bridge/double_dummy_solver/src/SolveBoard.h
  bridge/double_dummy_solver/src/SolverIF.cpp
  bridge/double_dummy_solver/src/SolverIF.h
  bridge/double_dummy_solver/src/System.cpp
  bridge/double_dummy_solver/src/System.h
  bridge/double_dummy_solver/src/ThreadMgr.cpp
  bridge/double_dummy_solver/src/ThreadMgr.h
  bridge/double_dummy_solver/src/Timer.cpp
  bridge/double_dummy_solver/src/Timer.h
  bridge/double_dummy_solver/src/TimerGroup.cpp
  bridge/double_dummy_solver/src/TimerGroup.h
  bridge/double_dummy_solver/src/TimerList.cpp
  bridge/double_dummy_solver/src/TimerList.h
  bridge/double_dummy_solver/src/TimeStat.cpp
  bridge/double_dummy_solver/src/TimeStat.h
  bridge/double_dummy_solver/src/TimeStatList.cpp
  bridge/double_dummy_solver/src/TimeStatList.h
  bridge/double_dummy_solver/src/TransTable.h
  bridge/double_dummy_solver/src/TransTableL.cpp
  bridge/double_dummy_solver/src/TransTableL.h
  bridge/double_dummy_solver/src/TransTableS.cpp
  bridge/double_dummy_solver/src/TransTableS.h
)
target_include_directories (bridge_double_dummy_solver PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
target_compile_definitions(bridge_double_dummy_solver PUBLIC DDS_NO_STATIC_INIT)


add_executable(twixt_test twixt/twixt_test.cc ${OPEN_SPIEL_OBJECTS}
               $<TARGET_OBJECTS:tests>)
add_test(twixt_test twixt_test)

